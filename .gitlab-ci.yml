stages:
  - build
  - test

image: $CI_REGISTRY/maierhofer/environment-model:v0.2.1

before_script:
  - conda create -n commonroad python=3.6
  - source activate commonroad
  - bash ./ci/install_cps_software.sh


build-library:
  stage: build
  script:
    - mkdir build && cd build
    - cmake -DCRCCOSY_LIBRARY_DIR="$HOME"/commonroad-curvilinear-coordinate-system -DCMAKE_BUILD_TYPE=Release ..
    - make env_model -j4

build-standalone:
  stage: build
  script:
    - mkdir build && cd build
    - cmake -DCRCCOSY_LIBRARY_DIR="$HOME"/commonroad-curvilinear-coordinate-system -DCMAKE_BUILD_TYPE=Release ..
    - make env_model_example_node -j4

build-test:
  stage: build
  script:
    - mkdir build && cd build
    - cmake -DCRCCOSY_LIBRARY_DIR="$HOME"/commonroad-curvilinear-coordinate-system -DCMAKE_BUILD_TYPE=Debug ..
    - make env_model_test -j4
  artifacts:
    paths:
      - ./env_model_test
      - ./tests/testScenarios/*
    expire_in: 20 minutes

build-run-coverage:
  stage: build
  script:
    - mkdir build && cd build
    - cmake -DCRCCOSY_LIBRARY_DIR="$HOME"/commonroad-curvilinear-coordinate-system -DCODE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
    - make env_model_coverage -j4
  artifacts:
    paths:
      - CMakeFiles/
      - env_model_coverage
    expire_in: 20 minutes


test:
  stage: test
  script:
    - ./env_model_test --gtest_output="xml:report.xml"
  dependencies:
    - build-test
  artifacts:
    reports:
      junit: ./report.xml

publish-coverage:
  stage: test
  script:
    - gcovr -e src/interfaces/commonroad/pugi_xml/pugixml.hpp -e src/interfaces/commonroad/pugi_xml/pugixml.cpp -e external/ -e 'cmake-(.+/)?/'
  dependencies:
    - build-run-coverage
