stages:
  - compile
  - test
  #  - sanitizer TODO
  - coverage
  - static-test
  - docs


image: $CI_REGISTRY/maierhofer/environment-model/ci-test:0.4.99.1

before_script:
  - source activate commonroad
  - pip install tox coverage
  - pip install -r ./requirements.txt
  - pip install -r ./test_requirements.txt

### static test ###
clang-format:
  stage: static-test
  script:
    bash ./ci/clang-format.sh
  dependencies: []

clang-tidy:
  stage: static-test
  script:
    # run CMake in order to get compile_commands.json
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug ..
    - cd ..
    - bash ./ci/clang-tidy.sh
  dependencies: []

cppcheck:
  stage: static-test
  script:
    # run CMake in order to get compile_commands.json
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug ..
    - cd ..
    - cppcheck --project=build/compile_commands.json -i"$(pwd)/external" -i"$(pwd)/src/commonroad_cpp/interfaces/commonroad/pugi_xml/pugixml.cpp"
  dependencies: []

### build project ###
build-clang:
  stage: compile
  script:
    - export CC=clang
    - export CXX=clang++
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCMAKE_BUILD_TYPE=Release ..
    - make env_model -j4

build-gcc:
  stage: compile
  script:
    - export CC=gcc
    - export CXX=g++
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCMAKE_BUILD_TYPE=Release ..
    - make env_model -j4

build-standalone:
  stage: compile
  script:
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCMAKE_BUILD_TYPE=Release ..
    - make env_model_example_node -j4

build-test:
  stage: compile
  script:
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make env_model_test -j4
  artifacts:
    paths:
      - build/env_model_test
      - build/libenv_model.so
      - ./tests/testScenarios/*
    expire_in: 20 minutes

build-run-coverage:
  stage: compile
  script:
    - mkdir build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DCODE_COVERAGE=ON -DCMAKE_CXX_FLAGS=--coverage -DCMAKE_BUILD_TYPE=Debug ..
    - make env_model_coverage -j4
  artifacts:
    paths:
      - ./build/
    expire_in: 20 minutes


### tests ###
test:
  stage: test
  script:
    - build/env_model_test --gtest_output="xml:report.xml"
  dependencies:
    - build-test
  artifacts:
    reports:
      junit: ./report.xml

test-python:
  stage: test
  script:
    - python setup.py develop --crccosy /commonroad/commonroad-drivability-checker
    - python -m pytest tests/python
  dependencies:
    - build-test
  allow_failure: true

### coverage ###
publish-coverage:
  stage: coverage
  script:
    - gcovr \
      --xml coverage.xml \
      -f src/ \
      -e src/commonroad_cpp/interfaces/commonroad/pugi_xml \
      -e src/commonroad_cpp/interfaces/standalone/main.cpp \
      -e src/commonroad_cpp/interfaces/pybind/
  dependencies:
    - build-run-coverage
  artifacts:
    reports:
      cobertura: coverage.xml


### create documentation ###
docs:
  stage: docs
  script:
    - mkdir -p build && cd build
    - DrivabilityChecker_DIR=/commonroad/commonroad-drivability-checker/build cmake -DBUILD_DOXYGEN=ON -DCMAKE_BUILD_TYPE=Debug ..
    - make doc_doxygen ..
  dependencies: []
