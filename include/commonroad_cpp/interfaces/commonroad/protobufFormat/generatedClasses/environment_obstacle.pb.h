// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: environment_obstacle.proto

#ifndef PROTOBUF_INCLUDED_environment_5fobstacle_2eproto
#define PROTOBUF_INCLUDED_environment_5fobstacle_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "obstacle.pb.h"
#include "util.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_environment_5fobstacle_2eproto 

namespace protobuf_environment_5fobstacle_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_environment_5fobstacle_2eproto
namespace commonroad {
class EnvironmentObstacle;
class EnvironmentObstacleDefaultTypeInternal;
extern EnvironmentObstacleDefaultTypeInternal _EnvironmentObstacle_default_instance_;
}  // namespace commonroad
namespace google {
namespace protobuf {
template<> ::commonroad::EnvironmentObstacle* Arena::CreateMaybeMessage<::commonroad::EnvironmentObstacle>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace commonroad {

// ===================================================================

class EnvironmentObstacle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:commonroad.EnvironmentObstacle) */ {
 public:
  EnvironmentObstacle();
  virtual ~EnvironmentObstacle();

  EnvironmentObstacle(const EnvironmentObstacle& from);

  inline EnvironmentObstacle& operator=(const EnvironmentObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnvironmentObstacle(EnvironmentObstacle&& from) noexcept
    : EnvironmentObstacle() {
    *this = ::std::move(from);
  }

  inline EnvironmentObstacle& operator=(EnvironmentObstacle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnvironmentObstacle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnvironmentObstacle* internal_default_instance() {
    return reinterpret_cast<const EnvironmentObstacle*>(
               &_EnvironmentObstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EnvironmentObstacle* other);
  friend void swap(EnvironmentObstacle& a, EnvironmentObstacle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnvironmentObstacle* New() const final {
    return CreateMaybeMessage<EnvironmentObstacle>(NULL);
  }

  EnvironmentObstacle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnvironmentObstacle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnvironmentObstacle& from);
  void MergeFrom(const EnvironmentObstacle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnvironmentObstacle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonroad.Shape obstacle_shape = 3;
  bool has_obstacle_shape() const;
  void clear_obstacle_shape();
  static const int kObstacleShapeFieldNumber = 3;
  private:
  const ::commonroad::Shape& _internal_obstacle_shape() const;
  public:
  const ::commonroad::Shape& obstacle_shape() const;
  ::commonroad::Shape* release_obstacle_shape();
  ::commonroad::Shape* mutable_obstacle_shape();
  void set_allocated_obstacle_shape(::commonroad::Shape* obstacle_shape);

  // required uint32 environment_obstacle_id = 1;
  bool has_environment_obstacle_id() const;
  void clear_environment_obstacle_id();
  static const int kEnvironmentObstacleIdFieldNumber = 1;
  ::google::protobuf::uint32 environment_obstacle_id() const;
  void set_environment_obstacle_id(::google::protobuf::uint32 value);

  // required .commonroad.ObstacleTypeEnum.ObstacleType obstacle_type = 2;
  bool has_obstacle_type() const;
  void clear_obstacle_type();
  static const int kObstacleTypeFieldNumber = 2;
  ::commonroad::ObstacleTypeEnum_ObstacleType obstacle_type() const;
  void set_obstacle_type(::commonroad::ObstacleTypeEnum_ObstacleType value);

  // @@protoc_insertion_point(class_scope:commonroad.EnvironmentObstacle)
 private:
  void set_has_environment_obstacle_id();
  void clear_has_environment_obstacle_id();
  void set_has_obstacle_type();
  void clear_has_obstacle_type();
  void set_has_obstacle_shape();
  void clear_has_obstacle_shape();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::commonroad::Shape* obstacle_shape_;
  ::google::protobuf::uint32 environment_obstacle_id_;
  int obstacle_type_;
  friend struct ::protobuf_environment_5fobstacle_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EnvironmentObstacle

// required uint32 environment_obstacle_id = 1;
inline bool EnvironmentObstacle::has_environment_obstacle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvironmentObstacle::set_has_environment_obstacle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvironmentObstacle::clear_has_environment_obstacle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvironmentObstacle::clear_environment_obstacle_id() {
  environment_obstacle_id_ = 0u;
  clear_has_environment_obstacle_id();
}
inline ::google::protobuf::uint32 EnvironmentObstacle::environment_obstacle_id() const {
  // @@protoc_insertion_point(field_get:commonroad.EnvironmentObstacle.environment_obstacle_id)
  return environment_obstacle_id_;
}
inline void EnvironmentObstacle::set_environment_obstacle_id(::google::protobuf::uint32 value) {
  set_has_environment_obstacle_id();
  environment_obstacle_id_ = value;
  // @@protoc_insertion_point(field_set:commonroad.EnvironmentObstacle.environment_obstacle_id)
}

// required .commonroad.ObstacleTypeEnum.ObstacleType obstacle_type = 2;
inline bool EnvironmentObstacle::has_obstacle_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvironmentObstacle::set_has_obstacle_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvironmentObstacle::clear_has_obstacle_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvironmentObstacle::clear_obstacle_type() {
  obstacle_type_ = 0;
  clear_has_obstacle_type();
}
inline ::commonroad::ObstacleTypeEnum_ObstacleType EnvironmentObstacle::obstacle_type() const {
  // @@protoc_insertion_point(field_get:commonroad.EnvironmentObstacle.obstacle_type)
  return static_cast< ::commonroad::ObstacleTypeEnum_ObstacleType >(obstacle_type_);
}
inline void EnvironmentObstacle::set_obstacle_type(::commonroad::ObstacleTypeEnum_ObstacleType value) {
  assert(::commonroad::ObstacleTypeEnum_ObstacleType_IsValid(value));
  set_has_obstacle_type();
  obstacle_type_ = value;
  // @@protoc_insertion_point(field_set:commonroad.EnvironmentObstacle.obstacle_type)
}

// required .commonroad.Shape obstacle_shape = 3;
inline bool EnvironmentObstacle::has_obstacle_shape() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvironmentObstacle::set_has_obstacle_shape() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvironmentObstacle::clear_has_obstacle_shape() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::commonroad::Shape& EnvironmentObstacle::_internal_obstacle_shape() const {
  return *obstacle_shape_;
}
inline const ::commonroad::Shape& EnvironmentObstacle::obstacle_shape() const {
  const ::commonroad::Shape* p = obstacle_shape_;
  // @@protoc_insertion_point(field_get:commonroad.EnvironmentObstacle.obstacle_shape)
  return p != NULL ? *p : *reinterpret_cast<const ::commonroad::Shape*>(
      &::commonroad::_Shape_default_instance_);
}
inline ::commonroad::Shape* EnvironmentObstacle::release_obstacle_shape() {
  // @@protoc_insertion_point(field_release:commonroad.EnvironmentObstacle.obstacle_shape)
  clear_has_obstacle_shape();
  ::commonroad::Shape* temp = obstacle_shape_;
  obstacle_shape_ = NULL;
  return temp;
}
inline ::commonroad::Shape* EnvironmentObstacle::mutable_obstacle_shape() {
  set_has_obstacle_shape();
  if (obstacle_shape_ == NULL) {
    auto* p = CreateMaybeMessage<::commonroad::Shape>(GetArenaNoVirtual());
    obstacle_shape_ = p;
  }
  // @@protoc_insertion_point(field_mutable:commonroad.EnvironmentObstacle.obstacle_shape)
  return obstacle_shape_;
}
inline void EnvironmentObstacle::set_allocated_obstacle_shape(::commonroad::Shape* obstacle_shape) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(obstacle_shape_);
  }
  if (obstacle_shape) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      obstacle_shape = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, obstacle_shape, submessage_arena);
    }
    set_has_obstacle_shape();
  } else {
    clear_has_obstacle_shape();
  }
  obstacle_shape_ = obstacle_shape;
  // @@protoc_insertion_point(field_set_allocated:commonroad.EnvironmentObstacle.obstacle_shape)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace commonroad

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_environment_5fobstacle_2eproto
