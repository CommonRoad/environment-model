// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: intersection.proto

#ifndef PROTOBUF_INCLUDED_intersection_2eproto
#define PROTOBUF_INCLUDED_intersection_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_intersection_2eproto 

namespace protobuf_intersection_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_intersection_2eproto
namespace commonroad {
class Incoming;
class IncomingDefaultTypeInternal;
extern IncomingDefaultTypeInternal _Incoming_default_instance_;
class Intersection;
class IntersectionDefaultTypeInternal;
extern IntersectionDefaultTypeInternal _Intersection_default_instance_;
}  // namespace commonroad
namespace google {
namespace protobuf {
template<> ::commonroad::Incoming* Arena::CreateMaybeMessage<::commonroad::Incoming>(Arena*);
template<> ::commonroad::Intersection* Arena::CreateMaybeMessage<::commonroad::Intersection>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace commonroad {

// ===================================================================

class Incoming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:commonroad.Incoming) */ {
 public:
  Incoming();
  virtual ~Incoming();

  Incoming(const Incoming& from);

  inline Incoming& operator=(const Incoming& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Incoming(Incoming&& from) noexcept
    : Incoming() {
    *this = ::std::move(from);
  }

  inline Incoming& operator=(Incoming&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Incoming& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Incoming* internal_default_instance() {
    return reinterpret_cast<const Incoming*>(
               &_Incoming_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Incoming* other);
  friend void swap(Incoming& a, Incoming& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Incoming* New() const final {
    return CreateMaybeMessage<Incoming>(NULL);
  }

  Incoming* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Incoming>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Incoming& from);
  void MergeFrom(const Incoming& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Incoming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 incoming_lanelets = 2;
  int incoming_lanelets_size() const;
  void clear_incoming_lanelets();
  static const int kIncomingLaneletsFieldNumber = 2;
  ::google::protobuf::uint32 incoming_lanelets(int index) const;
  void set_incoming_lanelets(int index, ::google::protobuf::uint32 value);
  void add_incoming_lanelets(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      incoming_lanelets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_incoming_lanelets();

  // repeated uint32 successors_right = 3;
  int successors_right_size() const;
  void clear_successors_right();
  static const int kSuccessorsRightFieldNumber = 3;
  ::google::protobuf::uint32 successors_right(int index) const;
  void set_successors_right(int index, ::google::protobuf::uint32 value);
  void add_successors_right(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      successors_right() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_successors_right();

  // repeated uint32 successors_straight = 4;
  int successors_straight_size() const;
  void clear_successors_straight();
  static const int kSuccessorsStraightFieldNumber = 4;
  ::google::protobuf::uint32 successors_straight(int index) const;
  void set_successors_straight(int index, ::google::protobuf::uint32 value);
  void add_successors_straight(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      successors_straight() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_successors_straight();

  // repeated uint32 successors_left = 5;
  int successors_left_size() const;
  void clear_successors_left();
  static const int kSuccessorsLeftFieldNumber = 5;
  ::google::protobuf::uint32 successors_left(int index) const;
  void set_successors_left(int index, ::google::protobuf::uint32 value);
  void add_successors_left(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      successors_left() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_successors_left();

  // required uint32 incoming_id = 1;
  bool has_incoming_id() const;
  void clear_incoming_id();
  static const int kIncomingIdFieldNumber = 1;
  ::google::protobuf::uint32 incoming_id() const;
  void set_incoming_id(::google::protobuf::uint32 value);

  // optional uint32 is_left_of = 6;
  bool has_is_left_of() const;
  void clear_is_left_of();
  static const int kIsLeftOfFieldNumber = 6;
  ::google::protobuf::uint32 is_left_of() const;
  void set_is_left_of(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonroad.Incoming)
 private:
  void set_has_incoming_id();
  void clear_has_incoming_id();
  void set_has_is_left_of();
  void clear_has_is_left_of();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > incoming_lanelets_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > successors_right_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > successors_straight_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > successors_left_;
  ::google::protobuf::uint32 incoming_id_;
  ::google::protobuf::uint32 is_left_of_;
  friend struct ::protobuf_intersection_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Intersection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:commonroad.Intersection) */ {
 public:
  Intersection();
  virtual ~Intersection();

  Intersection(const Intersection& from);

  inline Intersection& operator=(const Intersection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Intersection(Intersection&& from) noexcept
    : Intersection() {
    *this = ::std::move(from);
  }

  inline Intersection& operator=(Intersection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Intersection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Intersection* internal_default_instance() {
    return reinterpret_cast<const Intersection*>(
               &_Intersection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Intersection* other);
  friend void swap(Intersection& a, Intersection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Intersection* New() const final {
    return CreateMaybeMessage<Intersection>(NULL);
  }

  Intersection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Intersection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Intersection& from);
  void MergeFrom(const Intersection& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Intersection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonroad.Incoming incomings = 2;
  int incomings_size() const;
  void clear_incomings();
  static const int kIncomingsFieldNumber = 2;
  ::commonroad::Incoming* mutable_incomings(int index);
  ::google::protobuf::RepeatedPtrField< ::commonroad::Incoming >*
      mutable_incomings();
  const ::commonroad::Incoming& incomings(int index) const;
  ::commonroad::Incoming* add_incomings();
  const ::google::protobuf::RepeatedPtrField< ::commonroad::Incoming >&
      incomings() const;

  // repeated uint32 crossing_lanelets = 3;
  int crossing_lanelets_size() const;
  void clear_crossing_lanelets();
  static const int kCrossingLaneletsFieldNumber = 3;
  ::google::protobuf::uint32 crossing_lanelets(int index) const;
  void set_crossing_lanelets(int index, ::google::protobuf::uint32 value);
  void add_crossing_lanelets(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      crossing_lanelets() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_crossing_lanelets();

  // required uint32 intersection_id = 1;
  bool has_intersection_id() const;
  void clear_intersection_id();
  static const int kIntersectionIdFieldNumber = 1;
  ::google::protobuf::uint32 intersection_id() const;
  void set_intersection_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonroad.Intersection)
 private:
  void set_has_intersection_id();
  void clear_has_intersection_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::commonroad::Incoming > incomings_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > crossing_lanelets_;
  ::google::protobuf::uint32 intersection_id_;
  friend struct ::protobuf_intersection_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Incoming

// required uint32 incoming_id = 1;
inline bool Incoming::has_incoming_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Incoming::set_has_incoming_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Incoming::clear_has_incoming_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Incoming::clear_incoming_id() {
  incoming_id_ = 0u;
  clear_has_incoming_id();
}
inline ::google::protobuf::uint32 Incoming::incoming_id() const {
  // @@protoc_insertion_point(field_get:commonroad.Incoming.incoming_id)
  return incoming_id_;
}
inline void Incoming::set_incoming_id(::google::protobuf::uint32 value) {
  set_has_incoming_id();
  incoming_id_ = value;
  // @@protoc_insertion_point(field_set:commonroad.Incoming.incoming_id)
}

// repeated uint32 incoming_lanelets = 2;
inline int Incoming::incoming_lanelets_size() const {
  return incoming_lanelets_.size();
}
inline void Incoming::clear_incoming_lanelets() {
  incoming_lanelets_.Clear();
}
inline ::google::protobuf::uint32 Incoming::incoming_lanelets(int index) const {
  // @@protoc_insertion_point(field_get:commonroad.Incoming.incoming_lanelets)
  return incoming_lanelets_.Get(index);
}
inline void Incoming::set_incoming_lanelets(int index, ::google::protobuf::uint32 value) {
  incoming_lanelets_.Set(index, value);
  // @@protoc_insertion_point(field_set:commonroad.Incoming.incoming_lanelets)
}
inline void Incoming::add_incoming_lanelets(::google::protobuf::uint32 value) {
  incoming_lanelets_.Add(value);
  // @@protoc_insertion_point(field_add:commonroad.Incoming.incoming_lanelets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Incoming::incoming_lanelets() const {
  // @@protoc_insertion_point(field_list:commonroad.Incoming.incoming_lanelets)
  return incoming_lanelets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Incoming::mutable_incoming_lanelets() {
  // @@protoc_insertion_point(field_mutable_list:commonroad.Incoming.incoming_lanelets)
  return &incoming_lanelets_;
}

// repeated uint32 successors_right = 3;
inline int Incoming::successors_right_size() const {
  return successors_right_.size();
}
inline void Incoming::clear_successors_right() {
  successors_right_.Clear();
}
inline ::google::protobuf::uint32 Incoming::successors_right(int index) const {
  // @@protoc_insertion_point(field_get:commonroad.Incoming.successors_right)
  return successors_right_.Get(index);
}
inline void Incoming::set_successors_right(int index, ::google::protobuf::uint32 value) {
  successors_right_.Set(index, value);
  // @@protoc_insertion_point(field_set:commonroad.Incoming.successors_right)
}
inline void Incoming::add_successors_right(::google::protobuf::uint32 value) {
  successors_right_.Add(value);
  // @@protoc_insertion_point(field_add:commonroad.Incoming.successors_right)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Incoming::successors_right() const {
  // @@protoc_insertion_point(field_list:commonroad.Incoming.successors_right)
  return successors_right_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Incoming::mutable_successors_right() {
  // @@protoc_insertion_point(field_mutable_list:commonroad.Incoming.successors_right)
  return &successors_right_;
}

// repeated uint32 successors_straight = 4;
inline int Incoming::successors_straight_size() const {
  return successors_straight_.size();
}
inline void Incoming::clear_successors_straight() {
  successors_straight_.Clear();
}
inline ::google::protobuf::uint32 Incoming::successors_straight(int index) const {
  // @@protoc_insertion_point(field_get:commonroad.Incoming.successors_straight)
  return successors_straight_.Get(index);
}
inline void Incoming::set_successors_straight(int index, ::google::protobuf::uint32 value) {
  successors_straight_.Set(index, value);
  // @@protoc_insertion_point(field_set:commonroad.Incoming.successors_straight)
}
inline void Incoming::add_successors_straight(::google::protobuf::uint32 value) {
  successors_straight_.Add(value);
  // @@protoc_insertion_point(field_add:commonroad.Incoming.successors_straight)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Incoming::successors_straight() const {
  // @@protoc_insertion_point(field_list:commonroad.Incoming.successors_straight)
  return successors_straight_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Incoming::mutable_successors_straight() {
  // @@protoc_insertion_point(field_mutable_list:commonroad.Incoming.successors_straight)
  return &successors_straight_;
}

// repeated uint32 successors_left = 5;
inline int Incoming::successors_left_size() const {
  return successors_left_.size();
}
inline void Incoming::clear_successors_left() {
  successors_left_.Clear();
}
inline ::google::protobuf::uint32 Incoming::successors_left(int index) const {
  // @@protoc_insertion_point(field_get:commonroad.Incoming.successors_left)
  return successors_left_.Get(index);
}
inline void Incoming::set_successors_left(int index, ::google::protobuf::uint32 value) {
  successors_left_.Set(index, value);
  // @@protoc_insertion_point(field_set:commonroad.Incoming.successors_left)
}
inline void Incoming::add_successors_left(::google::protobuf::uint32 value) {
  successors_left_.Add(value);
  // @@protoc_insertion_point(field_add:commonroad.Incoming.successors_left)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Incoming::successors_left() const {
  // @@protoc_insertion_point(field_list:commonroad.Incoming.successors_left)
  return successors_left_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Incoming::mutable_successors_left() {
  // @@protoc_insertion_point(field_mutable_list:commonroad.Incoming.successors_left)
  return &successors_left_;
}

// optional uint32 is_left_of = 6;
inline bool Incoming::has_is_left_of() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Incoming::set_has_is_left_of() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Incoming::clear_has_is_left_of() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Incoming::clear_is_left_of() {
  is_left_of_ = 0u;
  clear_has_is_left_of();
}
inline ::google::protobuf::uint32 Incoming::is_left_of() const {
  // @@protoc_insertion_point(field_get:commonroad.Incoming.is_left_of)
  return is_left_of_;
}
inline void Incoming::set_is_left_of(::google::protobuf::uint32 value) {
  set_has_is_left_of();
  is_left_of_ = value;
  // @@protoc_insertion_point(field_set:commonroad.Incoming.is_left_of)
}

// -------------------------------------------------------------------

// Intersection

// required uint32 intersection_id = 1;
inline bool Intersection::has_intersection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Intersection::set_has_intersection_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Intersection::clear_has_intersection_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Intersection::clear_intersection_id() {
  intersection_id_ = 0u;
  clear_has_intersection_id();
}
inline ::google::protobuf::uint32 Intersection::intersection_id() const {
  // @@protoc_insertion_point(field_get:commonroad.Intersection.intersection_id)
  return intersection_id_;
}
inline void Intersection::set_intersection_id(::google::protobuf::uint32 value) {
  set_has_intersection_id();
  intersection_id_ = value;
  // @@protoc_insertion_point(field_set:commonroad.Intersection.intersection_id)
}

// repeated .commonroad.Incoming incomings = 2;
inline int Intersection::incomings_size() const {
  return incomings_.size();
}
inline void Intersection::clear_incomings() {
  incomings_.Clear();
}
inline ::commonroad::Incoming* Intersection::mutable_incomings(int index) {
  // @@protoc_insertion_point(field_mutable:commonroad.Intersection.incomings)
  return incomings_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::commonroad::Incoming >*
Intersection::mutable_incomings() {
  // @@protoc_insertion_point(field_mutable_list:commonroad.Intersection.incomings)
  return &incomings_;
}
inline const ::commonroad::Incoming& Intersection::incomings(int index) const {
  // @@protoc_insertion_point(field_get:commonroad.Intersection.incomings)
  return incomings_.Get(index);
}
inline ::commonroad::Incoming* Intersection::add_incomings() {
  // @@protoc_insertion_point(field_add:commonroad.Intersection.incomings)
  return incomings_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonroad::Incoming >&
Intersection::incomings() const {
  // @@protoc_insertion_point(field_list:commonroad.Intersection.incomings)
  return incomings_;
}

// repeated uint32 crossing_lanelets = 3;
inline int Intersection::crossing_lanelets_size() const {
  return crossing_lanelets_.size();
}
inline void Intersection::clear_crossing_lanelets() {
  crossing_lanelets_.Clear();
}
inline ::google::protobuf::uint32 Intersection::crossing_lanelets(int index) const {
  // @@protoc_insertion_point(field_get:commonroad.Intersection.crossing_lanelets)
  return crossing_lanelets_.Get(index);
}
inline void Intersection::set_crossing_lanelets(int index, ::google::protobuf::uint32 value) {
  crossing_lanelets_.Set(index, value);
  // @@protoc_insertion_point(field_set:commonroad.Intersection.crossing_lanelets)
}
inline void Intersection::add_crossing_lanelets(::google::protobuf::uint32 value) {
  crossing_lanelets_.Add(value);
  // @@protoc_insertion_point(field_add:commonroad.Intersection.crossing_lanelets)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Intersection::crossing_lanelets() const {
  // @@protoc_insertion_point(field_list:commonroad.Intersection.crossing_lanelets)
  return crossing_lanelets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Intersection::mutable_crossing_lanelets() {
  // @@protoc_insertion_point(field_mutable_list:commonroad.Intersection.crossing_lanelets)
  return &crossing_lanelets_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace commonroad

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_intersection_2eproto
