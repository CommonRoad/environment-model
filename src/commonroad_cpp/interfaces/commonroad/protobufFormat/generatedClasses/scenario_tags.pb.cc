// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scenario_tags.proto

#include "commonroad_cpp/interfaces/commonroad/protobufFormat/generatedClasses/scenario_tags.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace commonroad {
class TagEnumDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TagEnum>
      _instance;
} _TagEnum_default_instance_;
class ScenarioTagsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScenarioTags>
      _instance;
} _ScenarioTags_default_instance_;
}  // namespace commonroad
namespace protobuf_scenario_5ftags_2eproto {
static void InitDefaultsTagEnum() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonroad::_TagEnum_default_instance_;
    new (ptr) ::commonroad::TagEnum();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonroad::TagEnum::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TagEnum =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTagEnum}, {}};

static void InitDefaultsScenarioTags() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::commonroad::_ScenarioTags_default_instance_;
    new (ptr) ::commonroad::ScenarioTags();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::commonroad::ScenarioTags::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScenarioTags =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScenarioTags}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TagEnum.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScenarioTags.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonroad::TagEnum, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonroad::TagEnum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonroad::ScenarioTags, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonroad::ScenarioTags, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::commonroad::ScenarioTags, tags_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::commonroad::TagEnum)},
  { 5, 11, sizeof(::commonroad::ScenarioTags)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonroad::_TagEnum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::commonroad::_ScenarioTags_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "scenario_tags.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023scenario_tags.proto\022\ncommonroad\"\335\003\n\007Ta"
      "gEnum\"\321\003\n\003Tag\022\016\n\nINTERSTATE\020\000\022\t\n\005URBAN\020\001"
      "\022\013\n\007HIGHWAY\020\002\022\013\n\007COMFORT\020\003\022\014\n\010CRITICAL\020\004"
      "\022\013\n\007EVASIVE\020\005\022\n\n\006CUT_IN\020\006\022\021\n\rILLEGAL_CUT"
      "IN\020\007\022\020\n\014INTERSECTION\020\010\022\017\n\013LANE_CHANGE\020\t\022"
      "\022\n\016LANE_FOLLOWING\020\n\022\021\n\rMERGING_LANES\020\013\022\016"
      "\n\nMULTI_LANE\020\014\022\024\n\020ONCOMING_TRAFFIC\020\r\022\027\n\023"
      "NO_ONCOMING_TRAFFIC\020\016\022\022\n\016PARALLEL_LANES\020"
      "\017\022\016\n\nRACE_TRACK\020\020\022\016\n\nROUNDABOUT\020\021\022\t\n\005RUR"
      "AL\020\022\022\r\n\tSIMULATED\020\023\022\017\n\013SINGLE_LANE\020\024\022\r\n\t"
      "SLIP_ROAD\020\025\022\017\n\013SPEED_LIMIT\020\026\022\017\n\013TRAFFIC_"
      "JAM\020\027\022\r\n\tTURN_LEFT\020\030\022\016\n\nTURN_RIGHT\020\031\022\014\n\010"
      "TWO_LANE\020\032\022\025\n\021EMERGENCY_BRAKING\020\033\"5\n\014Sce"
      "narioTags\022%\n\004tags\030\001 \003(\0162\027.commonroad.Tag"
      "Enum.Tag"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 568);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scenario_tags.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_scenario_5ftags_2eproto
namespace commonroad {
const ::google::protobuf::EnumDescriptor* TagEnum_Tag_descriptor() {
  protobuf_scenario_5ftags_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_scenario_5ftags_2eproto::file_level_enum_descriptors[0];
}
bool TagEnum_Tag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TagEnum_Tag TagEnum::INTERSTATE;
const TagEnum_Tag TagEnum::URBAN;
const TagEnum_Tag TagEnum::HIGHWAY;
const TagEnum_Tag TagEnum::COMFORT;
const TagEnum_Tag TagEnum::CRITICAL;
const TagEnum_Tag TagEnum::EVASIVE;
const TagEnum_Tag TagEnum::CUT_IN;
const TagEnum_Tag TagEnum::ILLEGAL_CUTIN;
const TagEnum_Tag TagEnum::INTERSECTION;
const TagEnum_Tag TagEnum::LANE_CHANGE;
const TagEnum_Tag TagEnum::LANE_FOLLOWING;
const TagEnum_Tag TagEnum::MERGING_LANES;
const TagEnum_Tag TagEnum::MULTI_LANE;
const TagEnum_Tag TagEnum::ONCOMING_TRAFFIC;
const TagEnum_Tag TagEnum::NO_ONCOMING_TRAFFIC;
const TagEnum_Tag TagEnum::PARALLEL_LANES;
const TagEnum_Tag TagEnum::RACE_TRACK;
const TagEnum_Tag TagEnum::ROUNDABOUT;
const TagEnum_Tag TagEnum::RURAL;
const TagEnum_Tag TagEnum::SIMULATED;
const TagEnum_Tag TagEnum::SINGLE_LANE;
const TagEnum_Tag TagEnum::SLIP_ROAD;
const TagEnum_Tag TagEnum::SPEED_LIMIT;
const TagEnum_Tag TagEnum::TRAFFIC_JAM;
const TagEnum_Tag TagEnum::TURN_LEFT;
const TagEnum_Tag TagEnum::TURN_RIGHT;
const TagEnum_Tag TagEnum::TWO_LANE;
const TagEnum_Tag TagEnum::EMERGENCY_BRAKING;
const TagEnum_Tag TagEnum::Tag_MIN;
const TagEnum_Tag TagEnum::Tag_MAX;
const int TagEnum::Tag_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TagEnum::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TagEnum::TagEnum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_scenario_5ftags_2eproto::scc_info_TagEnum.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonroad.TagEnum)
}
TagEnum::TagEnum(const TagEnum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:commonroad.TagEnum)
}

void TagEnum::SharedCtor() {
}

TagEnum::~TagEnum() {
  // @@protoc_insertion_point(destructor:commonroad.TagEnum)
  SharedDtor();
}

void TagEnum::SharedDtor() {
}

void TagEnum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TagEnum::descriptor() {
  ::protobuf_scenario_5ftags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scenario_5ftags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TagEnum& TagEnum::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_scenario_5ftags_2eproto::scc_info_TagEnum.base);
  return *internal_default_instance();
}


void TagEnum::Clear() {
// @@protoc_insertion_point(message_clear_start:commonroad.TagEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TagEnum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonroad.TagEnum)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:commonroad.TagEnum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonroad.TagEnum)
  return false;
#undef DO_
}

void TagEnum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonroad.TagEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonroad.TagEnum)
}

::google::protobuf::uint8* TagEnum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonroad.TagEnum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonroad.TagEnum)
  return target;
}

size_t TagEnum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonroad.TagEnum)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TagEnum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonroad.TagEnum)
  GOOGLE_DCHECK_NE(&from, this);
  const TagEnum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TagEnum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonroad.TagEnum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonroad.TagEnum)
    MergeFrom(*source);
  }
}

void TagEnum::MergeFrom(const TagEnum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonroad.TagEnum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TagEnum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonroad.TagEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagEnum::CopyFrom(const TagEnum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonroad.TagEnum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagEnum::IsInitialized() const {
  return true;
}

void TagEnum::Swap(TagEnum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TagEnum::InternalSwap(TagEnum* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TagEnum::GetMetadata() const {
  protobuf_scenario_5ftags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scenario_5ftags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScenarioTags::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenarioTags::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenarioTags::ScenarioTags()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_scenario_5ftags_2eproto::scc_info_ScenarioTags.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:commonroad.ScenarioTags)
}
ScenarioTags::ScenarioTags(const ScenarioTags& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:commonroad.ScenarioTags)
}

void ScenarioTags::SharedCtor() {
}

ScenarioTags::~ScenarioTags() {
  // @@protoc_insertion_point(destructor:commonroad.ScenarioTags)
  SharedDtor();
}

void ScenarioTags::SharedDtor() {
}

void ScenarioTags::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScenarioTags::descriptor() {
  ::protobuf_scenario_5ftags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scenario_5ftags_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenarioTags& ScenarioTags::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_scenario_5ftags_2eproto::scc_info_ScenarioTags.base);
  return *internal_default_instance();
}


void ScenarioTags::Clear() {
// @@protoc_insertion_point(message_clear_start:commonroad.ScenarioTags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScenarioTags::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:commonroad.ScenarioTags)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .commonroad.TagEnum.Tag tags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::commonroad::TagEnum_Tag_IsValid(value)) {
            add_tags(static_cast< ::commonroad::TagEnum_Tag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::commonroad::TagEnum_Tag_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_tags())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:commonroad.ScenarioTags)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:commonroad.ScenarioTags)
  return false;
#undef DO_
}

void ScenarioTags::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:commonroad.ScenarioTags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonroad.TagEnum.Tag tags = 1;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tags(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:commonroad.ScenarioTags)
}

::google::protobuf::uint8* ScenarioTags::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:commonroad.ScenarioTags)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .commonroad.TagEnum.Tag tags = 1;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    1, this->tags_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:commonroad.ScenarioTags)
  return target;
}

size_t ScenarioTags::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:commonroad.ScenarioTags)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .commonroad.TagEnum.Tag tags = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->tags_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->tags(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScenarioTags::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:commonroad.ScenarioTags)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenarioTags* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenarioTags>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:commonroad.ScenarioTags)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:commonroad.ScenarioTags)
    MergeFrom(*source);
  }
}

void ScenarioTags::MergeFrom(const ScenarioTags& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:commonroad.ScenarioTags)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
}

void ScenarioTags::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:commonroad.ScenarioTags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenarioTags::CopyFrom(const ScenarioTags& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:commonroad.ScenarioTags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenarioTags::IsInitialized() const {
  return true;
}

void ScenarioTags::Swap(ScenarioTags* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenarioTags::InternalSwap(ScenarioTags* other) {
  using std::swap;
  tags_.InternalSwap(&other->tags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScenarioTags::GetMetadata() const {
  protobuf_scenario_5ftags_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_scenario_5ftags_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace commonroad
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonroad::TagEnum* Arena::CreateMaybeMessage< ::commonroad::TagEnum >(Arena* arena) {
  return Arena::CreateInternal< ::commonroad::TagEnum >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::commonroad::ScenarioTags* Arena::CreateMaybeMessage< ::commonroad::ScenarioTags >(Arena* arena) {
  return Arena::CreateInternal< ::commonroad::ScenarioTags >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
